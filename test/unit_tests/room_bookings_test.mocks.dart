// Mocks generated by Mockito 5.1.0 from annotations
// in project/test/unit_tests/room_bookings_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:project/server/server.dart' as _i3;
import 'package:project/tabs/provider.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeFirebaseAuth_0 extends _i1.Fake implements _i2.FirebaseAuth {}

/// A class which mocks [Server].
///
/// See the documentation for Mockito's code generation for more information.
class MockServer extends _i1.Mock implements _i3.Server {
  MockServer() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<Map<String, dynamic>> createAccount(
          Map<String, dynamic>? accountInfo) =>
      (super.noSuchMethod(Invocation.method(#createAccount, [accountInfo]),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i4.Future<Map<String, dynamic>>);
  @override
  _i4.Future<Map<String, dynamic>> login(Map<String, dynamic>? loginInfo) =>
      (super.noSuchMethod(Invocation.method(#login, [loginInfo]),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i4.Future<Map<String, dynamic>>);
  @override
  _i4.Future<Map<String, dynamic>> getBuildingDetails(String? building) =>
      (super.noSuchMethod(Invocation.method(#getBuildingDetails, [building]),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i4.Future<Map<String, dynamic>>);
  @override
  _i4.Future<Map<String, dynamic>> getRoomDetails(Map<String, dynamic>? room) =>
      (super.noSuchMethod(Invocation.method(#getRoomDetails, [room]),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i4.Future<Map<String, dynamic>>);
  @override
  _i4.Future<Map<String, dynamic>> getRoomBookings(
          Map<String, dynamic>? room) =>
      (super.noSuchMethod(Invocation.method(#getRoomBookings, [room]),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i4.Future<Map<String, dynamic>>);
  @override
  _i4.Future<Map<String, dynamic>> getUserInfo(String? userEmail) =>
      (super.noSuchMethod(Invocation.method(#getUserInfo, [userEmail]),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i4.Future<Map<String, dynamic>>);
  @override
  _i4.Future<Map<String, dynamic>> getUserBookings(String? userEmail) =>
      (super.noSuchMethod(Invocation.method(#getUserBookings, [userEmail]),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i4.Future<Map<String, dynamic>>);
  @override
  _i4.Future<Map<String, dynamic>> book(Map<String, dynamic>? bookingDetails) =>
      (super.noSuchMethod(Invocation.method(#book, [bookingDetails]),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i4.Future<Map<String, dynamic>>);
  @override
  _i4.Future<Map<String, dynamic>> amendBooking(
          Map<String, dynamic>? bookingDetails) =>
      (super.noSuchMethod(Invocation.method(#amendBooking, [bookingDetails]),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i4.Future<Map<String, dynamic>>);
  @override
  _i4.Future<void> cancelBooking(Map<String, dynamic>? bookingDetails) =>
      (super.noSuchMethod(Invocation.method(#cancelBooking, [bookingDetails]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> deleteFromHistory(Map<String, dynamic>? bookingDetails) =>
      (super.noSuchMethod(
          Invocation.method(#deleteFromHistory, [bookingDetails]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String localhost() =>
      (super.noSuchMethod(Invocation.method(#localhost, []), returnValue: '')
          as String);
}

/// A class which mocks [UserData].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserData extends _i1.Mock implements _i5.UserData {
  MockUserData() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseAuth get auth => (super.noSuchMethod(Invocation.getter(#auth),
      returnValue: _FakeFirebaseAuth_0()) as _i2.FirebaseAuth);
  @override
  set auth(_i2.FirebaseAuth? auth) =>
      super.noSuchMethod(Invocation.setter(#auth, auth),
          returnValueForMissingStub: null);
  @override
  set user(_i2.User? user) => super.noSuchMethod(Invocation.setter(#user, user),
      returnValueForMissingStub: null);
}
